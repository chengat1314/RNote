# -*- mode: org -*-
# Last modified: <2013-02-07 15:45:39 Thursday by richard>
#+STARTUP: showall
#+LaTeX_CLASS: chinese-export
#+TODO: TODO(t) UNDERGOING(u) | DONE(d) CANCELED(c)
#+TITLE:   user_story
#+AUTHOR: Richard Wong
* 跟顾问交谈的经验
  以下内容，“顾问”和“用户”，本质上并没有什么不同。
  其实跟顾问交谈，本质上需要把自己当作一个PM，要求对这个领域和SE都非
  常了解，才能做好。你自身最精确你的需求。
  在我跟思瑶交流的时候遇到了很多问题，幸好思瑶很专业，加上有劲松给我
  指点一些PM思维，在很多问题发生之前解决了不少问题。发生之后也很容易
  规避这些问题。
  需要知道的是，你需要做很多事情，这些非常重要，做好了这些，才能减少
  你之后写代码的痛苦。也只有做好这些，你花费宝贵时间所写的软件才有意
  义。
    1. 以用户故事为核心。（SE的本质）
       让顾问描述自身的工作流程。需要一个完整的工作流程。
       保持意识，他所工作的难点和重点，和你需要做的难点和重点并不一样。
    2. 不要相信顾问的需求。
       顾问会根据自己所见的去揣摩程序员需要做的。同样，你需要置身所述
       的琐碎的需求之外。
    3. 不要过度过早实现。（适度强迫用户习惯）
       一定要先准备好用户故事。以之为基础，细节化，粒度化。
       先实现一个Naive的页面和顾问交流。不要过度自动化。
       有时候，需要强迫顾问按照你的思路使用，而不要勉强做出垃圾软件。
    4. 从用户领域或者通用领域去交流
       不要对顾问讲实现，仔细询问领域知识就好。
       一般来讲顾问对你的领域也是一无所知，而且还没有交流经验，也更容
       易脑补内容。
       讲实现往往会带来，他说是是是，但是其实根本不是的情况，所以尽可
       能从用户领域去交流。
       领域知识至少包含：
       1. 用户故事中处理的所有细节。（理解业务逻辑）
       2. 你所需要的输入。
       3. 可计算性，以及计算所需的时间。
       4. 准确度要求。
    5. 小心jargon
       顾问会带来各种各样的jargon，比如“噪音”，“分类”，“实时”的
       处理，但是大部分这些和我们使用的更为准确的定义完全不一样，你需
       要仔细询问jargon的含义，莫躁急。
       比如，什么是噪音，为什么这些是噪音。
       分类是哪一种，是否可以都分类成功。
       实时要多实时，1分钟？几秒钟？有时候顾问可能认为只要少于1天的处
       理都能算是实时。
    6. 实现时尽可能分离出可能改变的层面。但是最开始的原型也不可避免的
       Naive。
    7. 不满足简单的确认，主动提问
       在你了解了一定业务所在领域的内容，需要对SE原型和方法进行最合理
       的映射，这时候，可以提问你的理解到底正确不正确。
    8. 准备好问题
       你不能期待顾问直接给你所有的需求。需要你自身替换为顾问的身份去
       思考问题，提出领域内的问题。
    9. 不要留下疑问（不要脑补）
       ---反正我喜欢揣摩别人的意思，看起来交流顺利，事实上可能完全理解
       错误。
       在项目中的任何阶段，都有可能对业务和某些细节都会有不解，千万不
       要靠猜测和揣摩，因为往往跟你想得完全不一样。一定用要仔细弄清楚。
       （在我和思瑶交流的时候就遇到过这个问题，脑补了之后实现了很久发
       现并不正确，所以需要再三问答。）
    10. 记录为王
        一般情况下，用户领域跟你完全不同，一定要记录下来用户领域的知识。
        揣摩其中内涵。

* 几个对话片段。(节选)
  其中R代表我。BD代表顾问。
** R: 你们如何判断这个weibo是否是产品还是广告的？
   BD: 我们也不是很清楚怎么判断的，大部分都是人工吧，人为经验判断最重
   要。
   R: 这样，你们有没有专门判断的方法？就是具体判断的规则？
   BD: 哦，这样啊，我们都是人工的，没有什么非常具体的方法。
   R: 恩，那我先看看，总结出一些规则，然后再跟你们进行下一步的讨论吧。
   conclusion: 还是需要进一步讨论，先作出通用的方法，领域知识系统之后建立。

** R: 文件为啥都是以hat----> ^开头的？
   BD: 什么意思？
   R: 我想问下文件名的格式有什么深入的含义。。
   BD: 不知道, 你可以随便玩弄.
   conclusion: 文件名自己设计吧。

** BD: 我需要整成什么格式发给你吗？还是直接给你自己搞啊？
   R: 你先给我看一下吧。我看看大致什么样子。
   BD: 先给你一个看看吧.我这里文件太多了
   conclusion: 看过文件，之后发现文件格式需要先对BD有要求，这点已经处
   理完毕。

** BD: 真希望这个东西早点造出来，人工去噪这件事太可怕了.
   R: 什么是噪声？
   BD: 怎么说呢？广告贴什么的都算噪音.
   R: 你怎么判断是噪声。
   BD: 去噪音这个过程需要一直积累经验, 不断放到词库里面去.
   BD: 留下的需要的信息是能找出消费者反馈的信息。
   R: 有一些类是噪声，有一些是用户需要的。对吧。
   BD: 嗯。
   BD: 然后用户需要的这些,你还能分类吗?
   R: 能。(只是不知道效果怎么样而已。。。。)

** R: 你的工作流程大概？
   BD: 我的工作流程是这样的，拿到原始数据之后，先去噪音，就是你弄好的
   那个东西.
   BD: 第二步, 把去噪之后的内容分类。
   BD: 判断正负面中性混合什么的.
   R: 还需要你们人工判断么？
   BD: 如果你们能整合到一起就最好了，不然我们就让他们手动跑。
   R: 哦。这是可以的。调用的一样是hehe的api.
   conclusion: 和hehe讨论一下，再看看是否应该吧api用进来。

** R: 你们对出错是怎么处理的？
   BD: 出错很正常。顾问可能一天都盯着这个东西。
   R: 不去纠正什么的？
   BD: 不会的，只能说尽量不去分错这些东西。
   conclusion: 模型容错性非常重要。

** BD: 其实现在BD有很多在做的项目,都是人工分类的, 快消行业很多..blahblahblah...
   R: 你说我设计一个结构，人工分类处理几百条（要求抽样均匀的），然后机
   器就可以自动学习分类，有用没？
   BD: 有, 会是实时吗.
   R: 瞬间出结果？实时指的哪种实时。
   BD: 不需要回家机器学习个一两天的。
   R: 好吧，根据任务量，1w条, 大概1个小时也有可能，能接受么？（按现在的
   速度）
   BD: 没有问题。
   conclusion: 设计一个通用的分类方法。（现在已经实现）

** R: 如果明年继续处理，会继续这些品牌的分类，还是新的？还是都有？（现在要设计是否要固化上去）
   BD: 都有,还会有新的.
   conclusion: 同时提供优化过的分类方法和通用的分类方法。（准确率还是
   提高非常明显的）
