# -*- mode: org -*-
# Last modified: <2012-11-19 16:05:30 Monday by richard>
#+STARTUP: showall
#+LaTeX_CLASS: chinese-export
#+TODO: TODO(t) UNDERGOING(u) | DONE(d) CANCELED(c)
#+TITLE:   half_year_review
#+AUTHOR: Richard Wong

* In total:
  每次想起来做总结的时候总是会遇到很多更有趣的问题。

* 请总结您半年内完成的任务： *
  半年内都主要做了什么呢？
  入职到现在其实差不多9个月，前三个月有一个简单的总结，（申请工作当然
  要有一个细致的总结和展望）
  其实我大概对工作的认识是这样的。主要分为工程化内容和NLP的研究内容。
  1. 工程上：搭建了基本的NLP架构，
     - 在全局通过fabric和git hook比较成熟完美的处理了由git管理的python
       工程的组织方式。
     - 基本完成了基于tornado的统一测试结构。
     - 单元测试覆盖率超过70%.
     - 自动管理部署服务器
     - 统一管理了对外和对内API的组成
  2. NLP的研究内容：
     - 人工矫正情感结果后端（这个很工程，不NLP）。
     - 自动去重算法。
     - 聚类算法 Gmeans（KMeans）
     - 相似度算法。

* 最近半年内，您在工作中遇到了哪些困难？都如何解决？现存什么问题会上你最上心？ *
  工程上面做了很多，比较关心代码如何组织可以更好的管理。
  NLP上面，一个是分词一直是弱项，需要好好做做。一个是标签问题。（NLP太
  灵活，太多的方法可以做了。很爽。）
  解决的问题很多，写不下，有很细节的问题，也有很全局的问题。建立一个知
  识分享系统很重要。
  现存的问题：
  一个是CI，一个是LDA算法。（反向验证nipeng的算法准确度）

* 请问您半年内，个人能力在哪些方面得到了提高？ *
  - 对整个行业有了一个比较初步的认识。（这也可能只是我自己大言不惭。）
  - 对python代码无论是整体性的把握，还是对细节的写法都有了极大的提高。
    （看了n多源码。）
  - 对NLP有了一个比较完整的体系。（包括ML，DM，etc）
  - 对产品的认识更加深刻，至少知道实现的方式应该尽可能精简满足需求，而
    不是为了做的好看而写了一大堆。
  - 更加抽象而整体的看编程相关问题。
    (In a more abstract, general and systematic way)
  - 如果骑自行车也算的话，我骑自行车也很牛逼了。

* 最近半年内，您学了哪些新技术？ *
  我假设这个新技术指的是我之前不会的，现在会的，或者又了解的技术。（而
  并非本行业的新技术，表示对于行业新技术还没有足够的把持感）
  学了一点ruby，但是觉着坑好多，水很深，就没继续学了。
  学过的 Hot points:
  - assert style programming；
  - programming in Node.js。
  - git hooks.
  - Auto-Testing.
  - CI.
  - some python tools.

  NLP related:
  - Clustering Method.(K(G)-means, etc.)
  - LDA(pLSA/LSI)
  - some mathemetica.

    我学了好多东西啊。很多东西都可以分享，后来大家都不写周报了，我也不
    知道用什么形式分享出来比较好。诶。求重视。

* 最近半年内，您看了哪些书？ *
  体会：在职场上面看书，比较有趣，也很有压力，太容易浮躁，但是也容易更
  有方向感的去看，另外：怎么样去看书是正确的，不好说。

  我记得的，这半年：（不含刚刚入职的三个月看的书）
  完整的看过的书：
  1. 番茄工作法。（pragmatic 系列的，这个我觉着咱们公司绝对可以学到一
     点什么，算是必看书籍）
  2. 高效能程序员xx个习惯。
  3. Pro Git.(每次看这个都不辛苦，而且还能学到东西，推荐看。)
  4. python test cookbook。（这个其实主要关于python的常用测试习惯的。）
  5. bieber's html, css, js.（主要是学习一些js相关的东西，很简单，但是
     会了解一些原理性质的东西，学习互联网都应该看看哈。）
  6. Shell十三问。（这个是pdf，如果这个也算是书的话）

  看过书的大部分：（超过75%的）
  1. 设计模式之禅.(这个书弱爆了，还不如HFDP好。)
  2. Release It.
  3. O'Reilly -RESTful.Web.Services

  看过书的一小部分：（这个百分比不好说，可能只看过一两章，不过是认真看
  的啦）
  1. AI: a modern approach.
  2. A Practical Guide to Linux Commands, Editors, and Shell
     Programming
  3. jenkins-the-definitive-guide。

  最后，论文看了一大堆，在此不表。

* 最近半年内，您参与了哪些技术交流和讨论？ *
  基本上每个月要参加一两次技术会议。（每次半天到两天不等）
  不过好多不记得了，至少有下面几个会：
  1. 北京理工那个沈xx的报告会。（我自己参加的，这个体会很多，帮助我建
     立了一个ML体系，大学讲座干活最多啊）
  2. open party的一次关于互联网音乐什么的。（我自己）
  3. 盛大关于NLP的一次会议。（我和blade，这个超无趣）
  4. pycon会议，比上面那个还没意思。我觉着我自己上去讲都比较合适，我有
     同学听了之后都不想去继续学习python了。
  5. 还有和hehe,nipeng一起参加的ML相关的一个会。（很有帮助，但是发现自
     己程度还是差很多）

** 看到这个问题，
   我想起每次会议之后应该有一个记录的，至少知道自己去过是吧。

* 您对公司的环境是否满意？ *
  在这里我把环境看成两个方面：
  1. 企业文化环境。
     不太满意。
     随着adm的变大，我觉着咱们越来越需要一个能够激励员工的什么的方案。
     我记得BOSS们新弄了一个优秀员工的那个奖，就很有意思。但是原因要说
     清楚，不能模糊不清，要不就没意思了。最少没有起到激励的作用。当然，
     说起来最简单了。如果这个奖变成了每个人轮流得，那也失去了他的本义。
     企业标语什么的我不知道，可能有。咱们应该设计一个。吉祥物什么的，有
     过投票，但是我也不知道。（貌似是猫头鹰了，但是没有任何的下文了。）

  我来了之后，企业经过好几次调整，我不是很明白，但是有个这个，可以看看
  啊，咱们现在发展的有点像MS流了。
  http://www.36kr.com/p/31377.html

  2. 物理设施环境。
     啊，比较满意，这个优点很多，缺点一样多。

* 如果您有任何吐槽，可以贴在这里。 *

  写在开始：可能是我的问题，我特喜欢吐槽。

  吐槽1：
  允许吐槽有一个好处，那就是可以比较委婉而尖锐的指出一个问题，如果每次
  吐槽没用，那就没必要吐槽了。吐槽的作用在咱们adm的有效力是50%。一半可
  能性接受。：）

  吐槽2：
  关于网络，可能我是对网络吐槽最多的人吧。
  我在此只是讲一点关于企业网络对企业影响的观点。
  无论是那个企业，可能员工都会感觉到公司网络的问题。但是阿里的员工培养
  的就比较娇气？出去了酒店，一般都会认为网速简直无法忍受。
  为什么阿里让他们的公司网速如此之快？据说是每员工20M。
  首先我们有两个共识：
  1. 随着互联网的发展，网速只会越来越快。（如果2012不到来:P）
  2. 并不是所有北京的IT企业网速都慢。

  我认为阿里是这么考虑的，经历了未来时间的用户体验，更容易设计出符合用
  户需求的内容，你自己的体验，往往是最纯正最重要的体验。尽早发现并解决
  问题，这个算是最基本的敏捷要求。（当然，也可能只是因为阿里反正员工多，
  钱也多，就随便包了一个n根光纤）

  然后按照我的个人体验来说：
  在只能按照拨号上网的速度进行上网的人，是不会感觉到网络U盘有任何作用
  的。早期的2M宽带流，云计算也不会有任何优势。我们都说云计算是趋势，除
  了媒体的大量的报道外，每个adM-er的体会在哪里？
  我家里的宽带是20M的，所以体会非常深刻，我的操作习惯，比如下载，囤积
  资料之类。在经历了网速飞越的增长之后完全改变，你自己的硬盘和机器很有
  可能会down掉，而服务器的就会更稳定（相比之下）。用户就会更加依靠互联
  网（尤其那些经历过几次重要资料的丢失之后的，为什么google会推出
  chromebook这种完全依赖互联网的东西？因为google在压宝：网络速度一定不
  会是问题。

  网络是一定会变快的，不管你信不信，反正我信了。

  可能是我个人比较挑剔，我认为仅仅不卡一定不可以是企业网络的目标！

  最后，我也知道企业网络和个人家庭宽带的价钱不一样，但这并不是我应该关
  心的内容。
  所以，企业不但应该让公司的网速无与伦比，更应该要求员工家里的网速无与
  伦比。

  吐槽x：
  这个问卷写的好累啊。
  吐槽放后面的原因是没有力气了可以不写么？
  我主要就吐槽一下网络了，吐槽薪水，你加不？哈哈哈哈。

* 您对自己的期望？和对公司的期望如何？ *
  我对自己期望还是比较高的。
  期望自己的无论是工程话思维，还是NLP-related方面都有长足的进展。
  期望自己在未来的时间还可以继续写出优秀的代码到优秀的产品，既可以满足
  公司的需求，自己又有最好的进步。（现在也没发现有什么矛盾）
  最希望的，那必然是算法堪比Knuth。工程堪比martin fowler，测试堪比beck。
  AI堪比Russell。：P

  对公司的期望有八个字：
  有机组成，无机合作。
  往小处讲：
  上次听吴昊讲用户判定的时候，可以利用机器学习的方法来提高验证准确度，
  但是咱们几个部门交互像M$，不和谐。经常遇到冲突开发的情况。idea太多，
  分好工很重要，合作起来不要费心思，跟无机物一样，单纯的合作。而不要进
  行不必要的开发浪费。
  然后公司需要对自己的服务API进行一套成熟度模型匹配？如果需要，至少说
  清楚自己的API开发到了什么情况，这样各个部门就好处理了。
  注：在python中开发的5个等级：
  Development Status :: 1 - Planning
  Development Status :: 2 - Pre-Alpha
  Development Status :: 3 - Alpha
  Development Status :: 4 - Beta
  Development Status :: 5 - Production/Stable
  Development Status :: 6 - Mature
  Development Status :: 7 - Inactive

  alpha -> beta -> develop -> stable
  开发中有这么一句话：
  DRY principle: Don't Repeat yourself.
  然后我有一新的：
  DRG principle: Don't Repeat Your Group。

* 总体来说，您对个人工作表现的满意程度如何 *
  8.3-8.6 ->8
* 总体来说，您对个人成长的满意程度如何.
  7.6-7.9 ->7
